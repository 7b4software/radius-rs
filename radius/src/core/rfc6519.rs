// Code generated by machine generator; DO NOT EDIT.

use crate::core::avp::{AVPError, AVPType, AVP};
use crate::core::packet::Packet;

pub const DS_LITE_TUNNEL_NAME_TYPE: AVPType = 144;
pub fn delete_ds_lite_tunnel_name(packet: &mut Packet) {
    packet.delete(DS_LITE_TUNNEL_NAME_TYPE);
}
pub fn add_ds_lite_tunnel_name(packet: &mut Packet, value: &str) {
    packet.add(AVP::from_string(DS_LITE_TUNNEL_NAME_TYPE, value));
}
pub fn lookup_ds_lite_tunnel_name(packet: &Packet) -> Option<Result<String, AVPError>> {
    packet
        .lookup(DS_LITE_TUNNEL_NAME_TYPE)
        .map(|v| v.encode_string())
}
pub fn lookup_all_ds_lite_tunnel_name(packet: &Packet) -> Result<Vec<String>, AVPError> {
    let mut vec = Vec::new();
    for avp in packet.lookup_all(DS_LITE_TUNNEL_NAME_TYPE) {
        vec.push(avp.encode_string()?)
    }
    Ok(vec)
}
